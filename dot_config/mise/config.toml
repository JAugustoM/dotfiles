[settings]
npm.bun = true
pipx.uvx = true
python.uv_venv_auto = true
cargo_binstall = true
idiomatic_version_file_enable_tools = ["python"]
experimental = true

[env]
PICO_SDK_PATH = "/home/jaugusto/Dev/.pico-sdk"
_.file = "~/.config/mise/.env"

[tools]
bun = "latest"
node = "latest"
usage = "latest"
watchexec = "latest"
cmake = "latest"
uv = "latest"
cargo-binstall = "latest"
just = "latest"
ninja = "latest"
"pipx:uvenv" = "latest"
"npm:typescript" = "latest"
"npm:live-server" = "latest"

# Tasks

[tasks."preset:picosdk"]
description = "Sets up a Pico C SDK project with template files"
dir = "{{ cwd }}"
usage = '''
  arg "project_name" "Project name"
'''
run = '''
  #!/usr/bin/env zsh
  mkdir $usage_project_name
  cd $usage_project_name
  cp -r ~/Templates/pico-sdk-template/. .
  cp $PICO_SDK_PATH/external/pico_sdk_import.cmake .
'''

[tasks."preset:typescript"]
description = "Sets up a Typescript project with template files"
dir = "{{ cwd }}"
usage = '''
  arg "project_name" "Project name"
'''
run = '''
  #!/usr/bin/env zsh
  mkdir $usage_project_name
  cd $usage_project_name
  cp -r ~/Templates/typescript-template/. .
'''

[tasks."setup:gh"]
description = "Sets up GH as credential manager"
run = '''
  #!/usr/bin/env zsh
  if [[ ! -r $MISE_TASK_DIR/.env ]]; then
    touch $MISE_TASK_DIR/.env
    echo "Created .env file"
  fi

  if [[ "$GH_SETUP" == "TRUE" ]]; then
    echo "gh already configured"
  else
    gh auth setup-git
    gh auth login
    echo "GH_SETUP=TRUE" >> $MISE_TASK_DIR/.env
  fi
'''

[tasks."setup:beets"]
description = "Setup for the beets tool"
run = '''
  #!/usr/bin/env zsh
  if [[ ! -r $MISE_TASK_DIR/.env ]]; then
    touch $MISE_TASK_DIR/.env
    echo "Created .env file"
  fi

  if [[ "$BEETS_SETUP" == "TRUE" ]]; then
    echo "beets already configured"
  else
    uvenv install "beets[chroma,fetchart,embedart,lyrics,scrub,thumbnails,lastgenre]"
    uvenv inject beets standard-aifc standard-sunau
    echo "BEETS_SETUP=TRUE" >> $MISE_TASK_DIR/.env
  fi
'''

[tasks."setup:picotool"]
description = "Setup picotool udev rules"
run = '''
  #!/usr/bin/env sh
  if [[ ! -r $MISE_TASK_DIR/.env ]]; then
    touch $MISE_TASK_DIR/.env
    echo "Created .env file"
  fi

  if [[ "$PICOTOOL_SETUP" == "TRUE" ]]; then
    echo "picotool already configured"
  else
    sudo curl -o /etc/udev/rules.d/99-picotool.rules https://raw.githubusercontent.com/raspberrypi/picotool/refs/heads/master/udev/99-picotool.rules
    sudo groupadd plugdev
    sudo usermod -aG plugdev {{arg(name="user", var=true)}}
    sudo udevadm control --reload-rules
    sudo udevadm trigger
    echo "PICOTOOL_SETUP=TRUE" >> $MISE_TASK_DIR/.env
  fi
'''

[tasks."update:pkgs"]
description = "Updates packages from package managers"
run = '''
  sudo dnf upgrade -y --refresh
  flatpak update -y
  brew update
  brew upgrade
'''

[tasks."update:dev"]
description = "Updates development tools"
run = '''
  rustup update
  uvenv upgrade-all
  mise up
'''
